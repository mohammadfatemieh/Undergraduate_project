C51 COMPILER V9.52.0.0   ______________                                                    04/22/2014 11:49:02 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE ______________
OBJECT MODULE PLACED IN 超声波测距系统.OBJ
COMPILER INVOKED BY: D:\Keil\keilv4.73\C51\BIN\C51.EXE 超声波测距系统.c BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include<AT89X51.H>
   2          #include<intrins.h>
   3          #include<stdio.h>
   4          
   5          
   6          sbit in1=P3^2;//超声波接收到
   7          sbit in2=P3^3;
   8          
   9          sbit csb1=P1^0;//40KHz超声波发射脚
  10          sbit csb2=P1^1;
  11          sbit csb3=P1^2;
  12          sbit csb4=P1^3;
  13          
  14          //sbit di=P0^7;
  15          
  16          #define uchar unsigned char
  17          #define uint unsigned int
  18          #define nop _nop_()
  19          
  20          sbit LCD_RS=P3^5;//定义引脚
  21          sbit LCD_RW=P3^6;
  22          sbit LCD_E=P3^4;
  23          sbit PSB =P3^1;   //PSB脚为12864-12系列的串、并通讯功能切换，我们使用8位并行接口，PSB=1
  24          #define LCD_Data P0
  25          
  26          
  27          
  28          
  29          #define Busy    0x80 //用于检测LCD状态字中的Busy标识
  30          
  31          /****************************/
  32          void init(void);//初始化函数
  33          void delay_nms(uint n);//延时MS函数
  34          void delay100us();//延时usus
  35          void display(uint dat);//数值显示函数
  36          void tran1(void);//超声波发射函数
  37          void tran2(void);
  38          void tran3(void);//3csb接收共1csb接收中断
  39          void tran4(void);//4csb接收供2csb接收中断
  40          /***************************/
  41          
  42          /*************************/
  43          void WriteDataLCD(unsigned char WDLCD);
  44          void WriteCommandLCD(unsigned char WCLCD,BuysC);
  45          unsigned char ReadDataLCD(void);
  46          unsigned char ReadStatusLCD(void);
  47          void LCDInit(void);
  48          void LCDClear(void);
  49          //void LCDFlash(void);
  50          void DisplayOneChar(unsigned char X, unsigned char Y, unsigned char DData);
  51          void DisplayListChar(unsigned char X, unsigned char Y, unsigned char code *DData);
  52          //void DisplayImage (unsigned char code *DData);
  53          void Delay5Ms(void);
  54          void Delay400Ms(void);
  55          /*************************/
C51 COMPILER V9.52.0.0   ______________                                                    04/22/2014 11:49:02 PAGE 2   

  56          uint dis1,dis2,dis3,dis4,H=100,L=20;
  57          uchar flag1=0,flag2=0,high_time1,low_time1,high_time2,low_time2,m=0;
  58          
  59          unsigned char  shuju[5];
  60          
  61          void  delay100us()
  62          {
  63   1          uchar i;
  64   1              for(i=0;i<50;i++)
  65   1                  ;
  66   1      }
  67          
  68          
  69          /**********************************
  70          ///////////////////////////*/
  71          void main(void)
  72          {
  73   1         Delay400Ms(); //启动等待，等LCD讲入工作状态
  74   1       LCDInit(); //LCM初始化
  75   1       Delay5Ms(); //延时片刻(可不要)
  76   1        
  77   1      init();
  78   1      while(1) //
  79   1      {
  80   2      
  81   2        uint i;
  82   2      
  83   2      tran1();//超声波发射
  84   2      display(dis1);///////////////////////////////
  85   2      delay_nms(10);  
  86   2        
  87   2      //    LCDClear();//清屏
  88   2      //    Delay400Ms();
  89   2      //    LCDClear();
  90   2        
  91   2          for(i=0;i<5;i++)
  92   2          DisplayOneChar(i,1,shuju[i]); //显示字库中的中文数子
  93   2      
  94   2      
  95   2      
  96   2        ////////////////////////////////此处可不用清屏
  97   2        tran2();//超声波发射
  98   2      display(dis2);///////////////////////////////
  99   2      delay_nms(10);  
 100   2        
 101   2      
 102   2          for(i=0;i<5;i++)
 103   2          DisplayOneChar(i,2,shuju[i]); //显示字库中的中文数子
 104   2          
 105   2          Delay400Ms();
 106   2          Delay400Ms();//通过延时防止因csb1接收引起中断
 107   2              Delay400Ms();
 108   2          Delay400Ms();
 109   2              Delay400Ms();
 110   2          Delay400Ms();
 111   2        ///////////////////////////////////////////////////
 112   2      tran3();//超声波发射3共1
 113   2      display(dis3);///////////////////////////////
 114   2      delay_nms(10);  
 115   2      
 116   2        
 117   2          for(i=0;i<5;i++)
C51 COMPILER V9.52.0.0   ______________                                                    04/22/2014 11:49:02 PAGE 3   

 118   2          DisplayOneChar(i,3,shuju[i]); //显示字库中的中文数子
 119   2      
 120   2        tran4();//超声波发射
 121   2      display(dis4);///////////////////////////////
 122   2      delay_nms(10);  
 123   2        
 124   2          for(i=0;i<5;i++)
 125   2          DisplayOneChar(i,4,shuju[i]); //显示字库中的中文数子
 126   2          Delay400Ms();
 127   2          Delay400Ms();
 128   2      }
 129   1      }
 130          /**********************************
 131          初始化
 132          **********************************/
 133          void init(void)
 134          {
 135   1        P0=0XFF;
 136   1        P1=0XFF;
 137   1        P2=0XFF;
 138   1        P3=0XFF;
 139   1      TMOD=0x11;//计时  
 140   1        TH1=0X00;
 141   1        TL1=0X00;
 142   1        IT1=1;
 143   1      TH0=0;//对定时器0初四画
 144   1      TL0=0; //
 145   1      EA=1;
 146   1      IT0=1;//
 147   1        //对定时器1进行初始化
 148   1      
 149   1      
 150   1      }
 151          /**********************************
 152          延时1
 153          **********************************/
 154          void delay_nms(uint n)
 155          {
 156   1      uchar i; 
 157   1      while(n--)
 158   1      {
 159   2      for(i=123;i>0;i--);
 160   2      }
 161   1      }
 162          
 163          ///////////////////////////////////
 164          void display(uint dat)
 165          {
 166   1      
 167   1          uchar i,j,k;//定义变量
 168   1      i=dat/100;//白
 169   1      j=dat%100/10;//十位
 170   1      k=dat%100%10;//个 
 171   1      
 172   1      
 173   1        shuju[0]=i+48;
 174   1          shuju[1]='.';
 175   1          shuju[2]=j+48;
 176   1          shuju[3]=k+48;
 177   1          shuju[4]=109;//或者shuju[4]='m'；
 178   1      }
 179          
C51 COMPILER V9.52.0.0   ______________                                                    04/22/2014 11:49:02 PAGE 4   

 180          /**********************************
 181          超声波发射
 182          **********************************/
 183          void tran1(void)
 184          {
 185   1      uchar i;
 186   1      float temp;
 187   1      TH0=0;
 188   1      TL0=0;//???
 189   1      TR0=1;//定时器0打开
 190   1        delay_nms(10);  
 191   1      for(i=8;i>0;i--)
 192   1      {
 193   2      csb1=!csb1;
 194   2      nop;
 195   2      nop;
 196   2      nop;
 197   2      nop;
 198   2      nop;
 199   2      nop;
 200   2      nop;
 201   2      nop;
 202   2      nop;
 203   2      }
 204   1      csb1=1;
 205   1      delay_nms(1);
 206   1      EX0=1;//开启外部中断
 207   1      if(flag1==1) //将所测的时间数转换成距离
 208   1      { //
 209   2      temp=high_time1*256+low_time1;
 210   2      temp=(temp/1000)/2;
 211   2      temp*=340;
 212   2      temp=temp/10;
 213   2      dis1=(unsigned int)temp;//dis将直接用于仙四函数
 214   2      flag1=0;
 215   2      }
 216   1      }
 217          //////////////////////////////////////////////////////////////////
 218          void tran2(void)
 219          {
 220   1      uchar i;
 221   1      float temp;
 222   1      TH1=0;
 223   1      TL1=0;//???
 224   1      TR1=1;//定时器1打开
 225   1        delay_nms(10);  
 226   1      for(i=8;i>0;i--)
 227   1      {
 228   2      csb2=!csb2;
 229   2      nop;
 230   2      nop;
 231   2      nop;
 232   2      nop;
 233   2      nop;
 234   2      nop;
 235   2      nop;
 236   2      nop;
 237   2      nop;
 238   2      }
 239   1      csb2=1;
 240   1      delay_nms(1);
 241   1      EX1=1;//开启外部中断
C51 COMPILER V9.52.0.0   ______________                                                    04/22/2014 11:49:02 PAGE 5   

 242   1      if(flag2==1) //将所测的时间数转换成距离
 243   1      { //
 244   2      temp=high_time2*256+low_time2;
 245   2      temp=(temp/1000)/2;
 246   2      temp*=340;
 247   2      temp=temp/10;
 248   2      dis2=(unsigned int)temp;//dis将直接用于显示函数
 249   2      flag2=0;
 250   2      }
 251   1      }
 252          
 253          ////////////////3接收共1csb
 254          void tran3(void)
 255          {
 256   1      uchar i;
 257   1      float temp;
 258   1      TH0=0;
 259   1      TL0=0;//???
 260   1      TR0=1;//定时器0打开
 261   1        delay_nms(10);  
 262   1      for(i=8;i>0;i--)
 263   1      {
 264   2      csb3=!csb3;
 265   2      nop;
 266   2      nop;
 267   2      nop;
 268   2      nop;
 269   2      nop;
 270   2      nop;
 271   2      nop;
 272   2      nop;
 273   2      nop;
 274   2      }
 275   1      csb3=1;
 276   1      delay_nms(1);
 277   1      EX0=1;//开启外部中断
 278   1      if(flag1==1) //将所测的时间数转换成距离
 279   1      { //
 280   2      temp=high_time1*256+low_time1;
 281   2      temp=(temp/1000)/2;
 282   2      temp*=340;
 283   2      temp=temp/10;
 284   2      dis3=(unsigned int)temp;//dis将直接用于仙四函数
 285   2      flag1=0;
 286   2      }
 287   1      }
 288          ////////////////4接收共2csb
 289          void tran4(void)
 290          {
 291   1      uchar i;
 292   1      float temp;
 293   1      TH1=0;
 294   1      TL1=0;//???
 295   1      TR1=1;//定时器1打开
 296   1        delay_nms(10);  
 297   1      for(i=8;i>0;i--)
 298   1      {
 299   2      csb4=!csb4;
 300   2      nop;
 301   2      nop;
 302   2      nop;
 303   2      nop;
C51 COMPILER V9.52.0.0   ______________                                                    04/22/2014 11:49:02 PAGE 6   

 304   2      nop;
 305   2      nop;
 306   2      nop;
 307   2      nop;
 308   2      nop;
 309   2      }
 310   1      csb4=1;
 311   1      delay_nms(1);
 312   1      EX1=1;//开启外部中断
 313   1      if(flag2==1) //将所测的时间数转换成距离
 314   1      { //
 315   2      temp=high_time2*256+low_time2;
 316   2      temp=(temp/1000)/2;
 317   2      temp*=340;
 318   2      temp=temp/10;
 319   2      dis4=(unsigned int)temp;//dis将直接用于显示函数
 320   2      flag2=0;
 321   2      }
 322   1      }
 323          /**********************************
 324          
 325          
 326          
 327          **********************************/
 328          void TT() interrupt 0//中断号为0时对应中断0
 329          {
 330   1      uint tmp;
 331   1      TR0=0;//关闭定时器；
 332   1      ET0=0;//关闭定时器允许位
 333   1      flag1=1; //标志位置唯一
 334   1      tmp=TH0*256+TL0; //对计数器数值的提取
 335   1      if((tmp>0)&&(tmp<60000))//判断所测得计时值是否在量程类
 336   1      {
 337   2      high_time1=TH0;//对时间的提取
 338   2      low_time1=TL0;
 339   2      
 340   2      }
 341   1      else //若超出量程时对所记值回零
 342   1      {
 343   2      high_time1=0;
 344   2      low_time1=0; 
 345   2      } 
 346   1      }
 347          //////外部中断一
 348          void TT1() interrupt 2//中断号为2时对应中断1
 349          {
 350   1      uint tmp;
 351   1      TR1=0;//关闭定时器1；
 352   1      ET1=0;//关闭定时器允许位1
 353   1      flag2=1; //标志位置唯一
 354   1      tmp=TH1*256+TL1; //对计数器数值的提取
 355   1      if((tmp>0)&&(tmp<60000))//判断所测得计时值是否在量程类
 356   1      {
 357   2      high_time2=TH1;//对时间的提取
 358   2      low_time2=TL1;
 359   2      
 360   2      }
 361   1      else //若超出量程时对所记值回零
 362   1      {
 363   2      high_time2=0;
 364   2      low_time2=0; 
 365   2      } 
C51 COMPILER V9.52.0.0   ______________                                                    04/22/2014 11:49:02 PAGE 7   

 366   1      }
 367          
 368          
 369          ////////////////////////////////////////////
 370          //1写数据
 371          void WriteDataLCD(unsigned char WDLCD)
 372          {
 373   1       ReadStatusLCD(); //检测忙 
 374   1       LCD_RS = 1;
 375   1       LCD_RW = 0;
 376   1       LCD_Data = WDLCD;
 377   1       LCD_E = 1;
 378   1       LCD_E = 1;
 379   1       LCD_E = 1;
 380   1       LCD_E = 0;
 381   1      }
 382          
 383          //2写指令
 384          void WriteCommandLCD(unsigned char WCLCD,BuysC) //BuysC为0时忽略忙检测
 385          {
 386   1       if (BuysC) ReadStatusLCD(); //根据需要检测忙 
 387   1       LCD_RS = 0;
 388   1       LCD_RW = 0; 
 389   1       LCD_Data = WCLCD;
 390   1       LCD_E = 1; 
 391   1       LCD_E = 1;
 392   1       LCD_E = 1;
 393   1       LCD_E = 0;  
 394   1      }
 395          
 396          //3读数据
 397          unsigned char ReadDataLCD(void)
 398          {
 399   1       LCD_RS = 1; 
 400   1       LCD_RW = 1;
 401   1       LCD_E = 0;
 402   1       LCD_E = 0;
 403   1       LCD_E = 1;
 404   1       return(LCD_Data);
 405   1      }
 406          
 407          //4读状态
 408          unsigned char ReadStatusLCD(void)
 409          {
 410   1       LCD_Data = 0xFF; 
 411   1       LCD_RS = 0;
 412   1       LCD_RW = 1; 
 413   1       LCD_E = 1;
 414   1       while (LCD_Data & Busy); //检测忙信号
 415   1       LCD_E = 0;
 416   1       return(LCD_Data);
 417   1      }
 418          
 419          void LCDInit(void) //5LCM初始化
 420          {
 421   1       WriteCommandLCD(0x30,1); //显示模式设置,开始要求每次检测忙信号
 422   1       WriteCommandLCD(0x01,1); //显示清屏
 423   1       WriteCommandLCD(0x06,1); // 显示光标移动设置
 424   1       WriteCommandLCD(0x0C,1); // 显示开及光标设置
 425   1      }
 426          void LCDClear(void) //6清屏
 427          {
C51 COMPILER V9.52.0.0   ______________                                                    04/22/2014 11:49:02 PAGE 8   

 428   1       WriteCommandLCD(0x01,1); //显示清屏
 429   1       WriteCommandLCD(0x34,1); // 显示光标移动设置
 430   1       WriteCommandLCD(0x30,1); // 显示开及光标设置
 431   1      }
 432          
 433          void DisplayOneChar(unsigned char X, unsigned char Y, unsigned char DData)
 434          {
 435   1       if(Y<1)
 436   1        Y=1;
 437   1       if(Y>4)
 438   1        Y=4;
 439   1       X &= 0x0F; //限制X不能大于16，Y不能大于1
 440   1       switch(Y){
 441   2        case 1:X|=0X80;break;
 442   2        case 2:X|=0X90;break;
 443   2        case 3:X|=0X88;break;
 444   2        case 4:X|=0X98;break;
 445   2        }
 446   1       WriteCommandLCD(X, 0); //这里不检测忙信号，发送地址码
 447   1       WriteDataLCD(DData);
 448   1      }
 449          
 450          //9按指定位置显示一串字符
 451          void DisplayListChar(unsigned char X, unsigned char Y, unsigned char code *DData)
 452          {
 453   1       unsigned char ListLength,X2;
 454   1        ListLength = 0;
 455   1        X2=X;
 456   1       if(Y<1)
 457   1        Y=1;
 458   1       if(Y>4)
 459   1        Y=4;
 460   1       X &= 0x0F; //限制X不能大于16，Y在1-4之内
 461   1       switch(Y){
 462   2        case 1:X2|=0X80;break;  //根据行数来选择相应地址
 463   2        case 2:X2|=0X90;break;
 464   2        case 3:X2|=0X88;break;
 465   2        case 4:X2|=0X98;break;
 466   2        }
 467   1       WriteCommandLCD(X2, 1); //10发送地址码
 468   1        while (DData[ListLength]>=0x20) //若到达字串尾则退出
 469   1        {
 470   2         if (X <= 0x0F) //X坐标应小于0xF
 471   2          {
 472   3           WriteDataLCD(DData[ListLength]); //
 473   3           ListLength++;
 474   3         X++;
 475   3         Delay5Ms();
 476   3          }
 477   2        }
 478   1      }
 479          //125ms延时
 480          void Delay5Ms(void)
 481          {
 482   1       unsigned int TempCyc = 5552;
 483   1       while(TempCyc--);
 484   1      }
 485          
 486          //13400ms延时
 487          void Delay400Ms(void)
 488          {
 489   1       unsigned char TempCycA = 5;
C51 COMPILER V9.52.0.0   ______________                                                    04/22/2014 11:49:02 PAGE 9   

 490   1       unsigned int TempCycB;
 491   1       while(TempCycA--)
 492   1       {
 493   2        TempCycB=7269;
 494   2        while(TempCycB--);
 495   2       };
 496   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1525    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     24      27
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
